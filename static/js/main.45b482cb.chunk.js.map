{"version":3,"sources":["services/api.js","components/NewUser/index.tsx","components/MenuBar/index.tsx","components/Asset/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["api","axios","create","baseURL","headers","Title","Typography","NewUser","visible","setVisible","useState","name","setName","email","setEmail","Form","useForm","onCancel","onOk","post","catch","console","error","title","style","marginTop","textAlign","Item","label","rules","required","value","onChange","target","MenuBar","show","set","companies","setCompanies","units","setUnits","users","setUsers","assets","setAssets","setEditCompany","setEditUnit","editUser","setEditUser","setEditAsset","getAssets","companyId","unitId","filter","asset","useEffect","getFromApi","path","get","then","data","err","mode","ItemGroup","map","company","id","unit","icon","UserOutlined","user","Meta","description","PlusOutlined","type","onClick","handleButton","Asset","handleOk","handleCancel","handleRemove","Value","footer","danger","span","src","image","healthscore","status","model","sensors","sensor","metrics","totalUptime","totalCollectsUptime","lastUptimeAt","Header","Layout","Content","Sider","App","setAsset","collapsed","setCollapsed","options","chart","text","xAxis","categories","yAxis","min","labels","overflow","plotOptions","column","dataLabels","enabled","series","newAsset","indexOf","push","className","collapsible","breakpoint","width","collapsedWidth","trigger","padding","createElement","MenuUnfoldOutlined","MenuFoldOutlined","length","highcharts","Highcharts","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45b482cb.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst api = axios.create({\n  baseURL: \"https://my-json-server.typicode.com/tractian/fake-api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n})\n\nexport default api;","import React, { useEffect, useState } from 'react';\nimport { Form, Input, Modal, Typography } from 'antd';\nimport api from '../../services/api';\nconst { Title } = Typography\n\n// import { Container } from './styles';\n\ninterface INewUser {\n  visible: boolean\n  setVisible: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst NewUser: React.FC<INewUser> = ({visible, setVisible}) => {\n  const [name, setName] = useState<string>('')\n  const [email, setEmail] = useState<string>('')\n\n  const form = Form.useForm()\n\n  function update() {\n    api.post('/users', {\n      name, email\n    }).catch(() => console.error(\"Error\"))\n    setVisible(false)\n  }\n\n  return (\n    <Modal \n      visible={visible} \n      onCancel={() => setVisible(false)}\n      onOk={update}\n    >\n      <Form \n        title={\"Novo Usuário\"} \n        style={{marginTop: 30}}\n      >\n        <Title style={{textAlign: \"center\"}}>Novo Usuário</Title>\n        <Form.Item name=\"name\" label=\"Nome\" rules={[{required: true}]}>\n          <Input value={name} onChange={name => setName(name.target.value)}/>\n        </Form.Item>\n        <Form.Item name=\"email\" label=\"Email\" rules={[{required: true}]}>\n          <Input value={email} onChange={email => setEmail(email.target.value)}/>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n\nexport default NewUser;","import { useEffect, useState } from \"react\";\nimport { IAsset, ICompany, IItem, IUnit, IUser } from \"../../types/global.type\";\nimport { Button, Menu, List, Modal } from \"antd\";\nimport SubMenu from \"antd/lib/menu/SubMenu\";\nimport api from \"../../services/api\";\nimport {\n  UserOutlined,\n  PlusOutlined\n} from '@ant-design/icons';\nimport NewUser from \"../NewUser\";\n\ninterface IParams {\n  show: () => void;\n  set: React.Dispatch<React.SetStateAction<IAsset | undefined>>\n}\n\nconst MenuBar: React.FC<IParams> = ({show, set}) => {\n  const [companies, setCompanies] = useState<ICompany[]>([]);\n  const [units, setUnits] = useState<IUnit[]>([]);\n  const [users, setUsers] = useState<IUser[]>([])\n  const [assets, setAssets] = useState<IAsset[]>([])\n  const [editCompany, setEditCompany] = useState<boolean>(false)\n  const [editUnit, setEditUnit] = useState<boolean>(false)\n  const [editUser, setEditUser] = useState<boolean>(false)\n  const [editAsset, setEditAsset] = useState<boolean>(false)\n\n  useEffect(() => {\n    function getFromApi<type>(\n      path:string, \n      set:React.Dispatch<React.SetStateAction<type>>,\n    ) {\n      api\n        .get<type>(path)\n        .then(({data}) => set(data))\n        .catch(err => console.error(\"An error has occurred\", err))\n    }\n\n    getFromApi<ICompany[]>(\"/companies\", setCompanies)\n    getFromApi<IUnit[]>(\"/units\", setUnits)\n    getFromApi<IUser[]>(\"/users\", setUsers)\n    getFromApi<IAsset[]>(\"/assets\", setAssets)\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  function handleButton(asset:Extract<IItem, IAsset>) {\n    set(asset)\n    show()\n  }\n\n  function getUnits(id:number) {\n    return units.filter(unit => unit.companyId === id)\n  }\n\n  function getUsers(companyId:number, unitId:number) {\n    return users.filter(user => \n      user.companyId === companyId && user.unitId === unitId  \n    )\n  }\n\n  function getAssets(companyId:number, unitId:number) {\n    return assets.filter(asset => \n      asset.companyId === companyId && asset.unitId === unitId  \n    )\n  }\n\n  type IAddButton = {\n    onClick: () => void\n  }\n  \n  return (\n    <>\n      <NewUser \n        visible={editUser}\n        setVisible={setEditUser}\n      />\n      <Menu\n        mode=\"inline\"\n      >\n        <Menu.ItemGroup title=\"Empresas\">\n          {companies.map(company => (\n            \n            <SubMenu key={\"units\" + company.id} title={company.name}>\n              <Menu.ItemGroup title=\"Unidades\">\n                {/* <div>Add Unidade</div> */}\n                {getUnits(company.id).map(unit => (\n                  <SubMenu key={unit.id} title={unit.name}>\n                    \n                    <SubMenu \n                      key={\"users\" + unit.id} \n                      title=\"Usuários\" \n                      icon={<UserOutlined />}\n                    >\n                      {getUsers(company.id, unit.id).map(\n                        ({id, name, email}) => (\n                          <Menu.Item key={\"user\" + id}>\n                            <List.Item.Meta\n                              title={name}\n                              description={email}\n                            />\n                          </Menu.Item>\n                        )\n                      )}\n                      <Menu.Item key=\"Add user\">\n                        <Button \n                          icon={<PlusOutlined />}\n                          type=\"dashed\"\n                          onClick={() => setEditUser(true)}\n                        >Adicionar</Button>\n                      </Menu.Item>\n                    </SubMenu>\n\n                    <SubMenu key={\"assets\" + unit.id} title=\"Ativos\">\n                      {getAssets(company.id, unit.id).map((asset) => (\n                        <Menu.Item key={\"asset\" + asset.id}>\n                          <Button \n                            onClick={() => handleButton(asset)}\n                            type=\"text\"\n                          >\n                            {asset.name}\n                          </Button>\n                        </Menu.Item>\n                      ))}\n                      <Menu.Item key=\"Add Asset\">\n                        <Button \n                          icon={<PlusOutlined />}\n                          type=\"dashed\"\n                          onClick={() => setEditAsset(true)}\n                        >Adicionar</Button>\n                      </Menu.Item>\n                    </SubMenu>\n                  </SubMenu>\n                ))}\n                <Menu.Item key=\"Add Unit\">\n                  <Button \n                    icon={<PlusOutlined />}\n                    type=\"dashed\"\n                    onClick={() => setEditUnit(true)}\n                  >Adicionar</Button>\n                </Menu.Item>\n              </Menu.ItemGroup>\n            </SubMenu>\n          ))}\n          <Button \n            icon={<PlusOutlined />}\n            type=\"dashed\"\n            onClick={() => setEditCompany(true)}\n          >Adicionar</Button>\n        </Menu.ItemGroup>\n      </Menu>\n    </>\n  );\n}\n\nexport default MenuBar;","import { Button, Col, Image, Modal, Row } from 'antd';\nimport React from 'react';\nimport { IAsset } from '../../types/global.type';\n\ninterface IModal {\n  asset: IAsset | undefined;\n  visible: boolean\n  handleOk: (asset:IAsset | undefined) => void\n  handleCancel: () => void\n  handleRemove: (id?:number) => void\n}\n\ninterface IValue {\n  title: string\n  value: any\n}\n\nconst Asset: React.FC<IModal> = (\n  {asset, visible, handleOk, handleCancel, handleRemove}\n) => {\n  const Value: React.FC<IValue> = ({title, value}) => (\n    <p><strong>{title + \": \"}</strong>{value}</p>\n  )\n\n  return (\n    <Modal\n      visible={visible}\n      title={asset?.name}\n      onOk={() => handleOk(asset)}\n      onCancel={handleCancel}\n      footer={[\n        <Button \n          key=\"back\" \n          type=\"primary\"\n          danger\n          onClick={() => handleRemove(asset?.id)}>\n          Remover\n        </Button>,\n        <Button \n          key=\"submit\" \n          type=\"primary\" \n          onClick={() => \n          handleOk(asset)}>\n          Adicionar\n        </Button>\n      ]}\n    >\n      <Row>\n        <Col span=\"8\">\n          <Image src={asset?.image}/>\n        </Col>\n        <Col>\n          <Value title=\"Healthscore\" value={asset?.healthscore}/>\n          <Value title=\"Status\" value={asset?.status}/>\n          <Value title=\"Modelo\" value={asset?.model}/>\n          <p><strong>Sensores:</strong></p>\n          {asset?.sensors.map(sensor => (\n            <ul>\n              <li>{sensor}</li>\n            </ul>\n          ))}\n          <p><strong>Especificações: </strong></p>\n          <ul>\n            <li>\n              <Value \n                title=\"totalUptime\"\n                value={asset?.metrics.totalUptime}>\n              </Value>\n            </li>\n            <li>\n              <Value \n                title=\"totalCollectsUptime\"\n                value={asset?.metrics.totalCollectsUptime}>\n              </Value>\n            </li>\n            <li>\n              <Value \n                title=\"lastUptimeAt\"\n                value={asset?.metrics.lastUptimeAt}>\n              </Value>\n            </li>\n          </ul>\n        </Col>\n      </Row>\n    </Modal>\n  );\n}\n\nexport default Asset;","import { createElement, useEffect, useState } from \"react\";\nimport { Empty, Layout } from \"antd\";\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n} from '@ant-design/icons';\nimport MenuBar from './components/MenuBar';\nimport './App.css'\n\nimport HighchartsReact from \"highcharts-react-official\";\nimport Highcharts from 'highcharts'\n\nimport Asset from \"./components/Asset\";\nimport { IAsset } from \"./types/global.type\";\n\nconst { Header, Content, Sider } = Layout;\n\nfunction App() {\n  const [visible, setVisible] = useState<boolean>(false)\n  const [assets, setAssets] = useState<IAsset[]>([])\n  const [asset, setAsset] = useState<IAsset>()\n  const [collapsed, setCollapsed] = useState<boolean>(false)\n  \n  const options = {\n    chart: {\n      type: 'column'\n    },\n    title: {\n      text: 'Healthscore dos Ativos'\n    },\n    xAxis: {\n      categories: assets.map(asset => asset.name),\n      title: {\n        text: null\n      }\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: null,\n      },\n      labels: {\n        overflow: 'justify'\n      }\n    },\n    plotOptions: {\n      column: {\n        dataLabels: {\n          enabled: true\n        }\n      }\n    },\n    series: [{\n      name: 'Healthscore',\n      data: assets.map(asset => asset.healthscore)\n    }]\n  }\n\n  function handleOk(newAsset:IAsset | undefined) {\n    if(newAsset) {\n      assets.indexOf(newAsset) === -1\n      && assets.push(newAsset)\n    }\n    setVisible(false)\n  }\n\n  function handleRemove(id?:number) {\n    setAssets(assets.filter(asset => asset.id != id))\n    setVisible(false)\n  }\n\n  function handleCancel() {\n    setVisible(false)\n  }\n\n  function showModal() {\n    setVisible(true)\n  }\n\n  function toggle() {\n    setCollapsed(!collapsed)\n  }\n\n  return (\n    <>\n      <Asset \n        visible={visible}\n        asset={asset}\n        handleOk={handleOk}\n        handleCancel={handleCancel}\n        handleRemove={handleRemove}\n      />\n      <Layout>\n        <Header className=\"header\">\n          <div className=\"logo\">\n            <p>TRACTIAN </p>\n            <p>CHALLENGE</p>\n          </div>\n        </Header>\n        <Layout>\n          <Sider \n            collapsed={collapsed}\n            collapsible\n            className=\"site-layout-background\"\n            breakpoint=\"lg\"\n            width={250}\n            collapsedWidth={0}\n            trigger={null}\n          >\n            <MenuBar show={showModal} set={setAsset}/>\n          </Sider>\n          <Layout>\n            <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n              {createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                className: 'trigger',\n                onClick: toggle\n              })}\n            </Header>\n            <Content className=\"content\">\n              {assets.length == 0\n                ? <Empty />\n                : <HighchartsReact\n                    highcharts={Highcharts}\n                    options={options}\n                  />\n              }\n            </Content>\n          </Layout>\n        </Layout>\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}