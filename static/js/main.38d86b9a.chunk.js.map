{"version":3,"sources":["services/api.js","components/NewUser.tsx","components/NewCompany.tsx","components/NewUnit.tsx","components/NewAsset.tsx","components/MenuBar.tsx","components/Asset.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["api","axios","create","baseURL","headers","Title","Typography","NewUser","visible","setVisible","companyId","unitId","useState","name","setName","email","setEmail","onCancel","onOk","post","catch","console","error","style","marginTop","textAlign","Item","label","rules","required","value","onChange","target","NewCompany","NewUnit","Select","Option","setCompanies","useEffect","get","then","data","err","NewAsset","model","setModel","status","setStatus","image","setImage","healthscore","setHealthscore","maxTemp","setMaxTemp","power","setPower","rpm","setRpm","specifications","e","level","MenuBar","show","set","companies","units","setUnits","users","setUsers","assets","setAssets","editCompany","setEditCompany","editUnit","setEditUnit","editUser","setEditUser","editAsset","setEditAsset","getAssets","filter","asset","getFromApi","path","mode","ItemGroup","title","map","company","id","unit","icon","UserOutlined","user","Meta","description","PlusOutlined","type","onClick","handleButton","Asset","handleOk","handleCancel","handleRemove","Value","footer","danger","src","sensors","sensor","metrics","totalUptime","totalCollectsUptime","lastUptimeAt","Header","Layout","Content","Sider","App","setAsset","collapsed","setCollapsed","options","chart","text","xAxis","categories","yAxis","min","labels","overflow","plotOptions","column","dataLabels","enabled","series","newAsset","indexOf","push","className","collapsible","breakpoint","width","collapsedWidth","trigger","padding","createElement","MenuUnfoldOutlined","MenuFoldOutlined","length","highcharts","Highcharts","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38d86b9a.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst api = axios.create({\n  baseURL: \"https://my-json-server.typicode.com/tractian/fake-api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n})\n\nexport default api;","import React, { useState } from 'react';\nimport { Form, Input, Modal, Typography } from 'antd';\nimport api from '../services/api';\nconst { Title } = Typography\n\ninterface INewUser {\n  visible: boolean\n  setVisible: React.Dispatch<React.SetStateAction<boolean>>\n  companyId: number\n  unitId: number\n}\n\nconst NewUser: React.FC<INewUser> = ({visible, setVisible, companyId, unitId}) => {\n  const [name, setName] = useState<string>('')\n  const [email, setEmail] = useState<string>('')\n\n  function update() {\n    api.post('/users', {\n      name, email, companyId, unitId\n    }).catch(() => console.error(\"Error\"))\n    setVisible(false)\n  }\n\n  return (\n    <Modal \n      visible={visible} \n      onCancel={() => setVisible(false)}\n      onOk={update}\n    >\n      <Form \n        style={{marginTop: 30}}\n      >\n        <Title style={{textAlign: \"center\"}}>Novo Usuário</Title>\n        <Form.Item name=\"name\" label=\"Nome\" rules={[{required: true}]}>\n          <Input value={name} onChange={name => setName(name.target.value)}/>\n        </Form.Item>\n        <Form.Item name=\"email\" label=\"Email\" rules={[{required: true}]}>\n          <Input value={email} onChange={email => setEmail(email.target.value)}/>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n\nexport default NewUser;","import React, { useState } from 'react';\nimport { Form, Input, Modal, Typography } from 'antd';\nimport api from '../services/api';\nconst { Title } = Typography\n\ninterface INewCompany {\n  visible: boolean\n  setVisible: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst NewCompany: React.FC<INewCompany> = ({visible, setVisible}) => {\n  const [name, setName] = useState<string>('')\n\n  function update() {\n    api.post('/companies', {\n      name\n    }).catch(() => console.error(\"Error\"))\n    setVisible(false)\n  }\n\n  return (\n    <Modal \n      visible={visible} \n      onCancel={() => setVisible(false)}\n      onOk={update}\n    >\n      <Form \n        style={{marginTop: 30}}\n      >\n        <Title style={{textAlign: \"center\"}}>Nova Empresa</Title>\n        <Form.Item name=\"name\" label=\"Nome\" rules={[{required: true}]}>\n          <Input value={name} onChange={name => setName(name.target.value)}/>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n\nexport default NewCompany;","import React, { useEffect, useState } from 'react';\nimport { Form, Input, Modal, Typography, Select } from 'antd';\nimport api from '../services/api';\nimport { ICompany } from '../types/global.type';\nconst { Title } = Typography\nconst { Option } = Select\n\ninterface INewUser {\n  visible: boolean\n  setVisible: React.Dispatch<React.SetStateAction<boolean>>\n  companyId: number\n}\n\nconst NewUnit: React.FC<INewUser> = ({visible, setVisible, companyId}) => {\n  const [name, setName] = useState<string>('')\n  const [companies, setCompanies] = useState<ICompany[]>([])\n\n  function update() {\n    api.post('/units', {\n      name, companyId\n    }).catch(() => console.error(\"Error\"))\n    setVisible(false)\n  }\n\n  useEffect(() => {\n    api\n      .get<ICompany[]>(\"/companies\")\n      .then(({data}) => setCompanies(data))\n      .catch(err => console.error(\"An error has occurred\", err))\n  })\n\n  return (\n    <Modal \n      visible={visible} \n      onCancel={() => setVisible(false)}\n      onOk={update}\n    >\n      <Form \n        style={{marginTop: 30}}\n      >\n        <Title style={{textAlign: \"center\"}}>Nova Unidade</Title>\n        <Form.Item name=\"name\" label=\"Nome\" rules={[{required: true}]}>\n          <Input value={name} onChange={name => setName(name.target.value)}/>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n\nexport default NewUnit;","import React, { useState } from 'react';\nimport { Form, Input, Modal, Typography } from 'antd';\nimport api from '../services/api';\nconst { Title } = Typography\n\ninterface INewUser {\n  visible: boolean\n  setVisible: React.Dispatch<React.SetStateAction<boolean>>\n  companyId: number\n  unitId: number\n}\n\nconst NewAsset: React.FC<INewUser> = ({visible, setVisible, companyId, unitId}) => {\n  const [name, setName] = useState<string>('')\n  const [model, setModel] = useState<string>('')\n  const [status, setStatus] = useState<string>('')\n  const [image, setImage] = useState<string>('')\n  const [healthscore, setHealthscore] = useState<string>('')\n  const [maxTemp, setMaxTemp] = useState<string>('')\n  const [power, setPower] = useState<string>('')\n  const [rpm, setRpm] = useState<string>('')\n\n  function update() {\n    api.post('/assets', {\n      name, model, status, healthscore, specifications: { maxTemp, power, rpm },\n      companyId, unitId\n    }).catch(() => console.error(\"Error\"))\n    setVisible(false)\n  }\n\n  return (\n    <Modal \n      visible={visible} \n      onCancel={() => setVisible(false)}\n      onOk={update}\n    >\n      <Form \n        style={{marginTop: 30}}\n      >\n        <Title style={{textAlign: \"center\"}}>Novo Usuário</Title>\n        <Form.Item name=\"name\" label=\"Nome\" rules={[{required: true}]}>\n          <Input value={name} onChange={e => setName(e.target.value)}/>\n        </Form.Item>\n        <Form.Item name=\"model\" label=\"Modelo\" rules={[{required: true}]}>\n          <Input value={model} onChange={e => setModel(e.target.value)}/>\n        </Form.Item>\n        <Form.Item name=\"healthscore\" label=\"Healthscore\" rules={[{required: true}]}>\n          <Input \n            value={healthscore} \n            onChange={e => setHealthscore(e.target.value)}/>\n        </Form.Item>\n        <Form.Item name=\"status\" label=\"Status\" rules={[{required: true}]}>\n          <Input value={status} onChange={e => setStatus(e.target.value)}/>\n        </Form.Item>\n        <Form.Item name=\"image\" label=\"Imagem\" rules={[{required: true}]}>\n          <Input value={image} onChange={e => setImage(e.target.value)}/>\n        </Form.Item>\n        <Title level={3}>Especificações</Title>\n        <Form.Item name=\"maxTemp\" label=\"Temperatura Máxima\">\n          <Input \n            value={maxTemp} \n            onChange={e => setMaxTemp(e.target.value)}/>\n        </Form.Item>\n        <Form.Item name=\"power\" label=\"Potência\">\n          <Input value={power} onChange={e => setPower(e.target.value)}/>\n        </Form.Item>\n        <Form.Item name=\"rpm\" label=\"RPM\">\n          <Input value={rpm} onChange={e => setRpm(e.target.value)}/>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n\nexport default NewAsset;","import { useEffect, useState } from \"react\";\nimport { IAsset, ICompany, IItem, IUnit, IUser } from \"../types/global.type\";\nimport { Button, Menu, List } from \"antd\";\nimport SubMenu from \"antd/lib/menu/SubMenu\";\nimport api from \"../services/api\";\nimport {\n  UserOutlined,\n  PlusOutlined\n} from '@ant-design/icons';\nimport NewUser from \"./NewUser\";\nimport NewCompany from \"./NewCompany\";\nimport NewUnit from \"./NewUnit\";\nimport NewAsset from \"./NewAsset\";\n\ninterface IParams {\n  show: () => void;\n  set: React.Dispatch<React.SetStateAction<IAsset | undefined>>\n}\n\nconst MenuBar: React.FC<IParams> = ({show, set}) => {\n  const [companies, setCompanies] = useState<ICompany[]>([]);\n  const [units, setUnits] = useState<IUnit[]>([]);\n  const [users, setUsers] = useState<IUser[]>([])\n  const [assets, setAssets] = useState<IAsset[]>([])\n  const [editCompany, setEditCompany] = useState<boolean>(false)\n  const [editUnit, setEditUnit] = useState<boolean>(false)\n  const [editUser, setEditUser] = useState<boolean>(false)\n  const [editAsset, setEditAsset] = useState<boolean>(false)\n\n  useEffect(() => {\n    function getFromApi<type>(\n      path:string, \n      set:React.Dispatch<React.SetStateAction<type>>,\n    ) {\n      api\n        .get<type>(path)\n        .then(({data}) => set(data))\n        .catch(err => console.error(\"An error has occurred\", err))\n    }\n\n    getFromApi<ICompany[]>(\"/companies\", setCompanies)\n    getFromApi<IUnit[]>(\"/units\", setUnits)\n    getFromApi<IUser[]>(\"/users\", setUsers)\n    getFromApi<IAsset[]>(\"/assets\", setAssets)\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  function handleButton(asset:Extract<IItem, IAsset>) {\n    set(asset)\n    show()\n  }\n\n  function getUnits(id:number) {\n    return units.filter(unit => unit.companyId === id)\n  }\n\n  function getUsers(companyId:number, unitId:number) {\n    return users.filter(user => \n      user.companyId === companyId && user.unitId === unitId  \n    )\n  }\n\n  function getAssets(companyId:number, unitId:number) {\n    return assets.filter(asset => \n      asset.companyId === companyId && asset.unitId === unitId  \n    )\n  }\n\n  type IAddButton = {\n    onClick: () => void\n  }\n  \n  return (\n    <>\n      <NewCompany \n        visible={editCompany}\n        setVisible={setEditCompany}\n      />\n      <Menu\n        mode=\"inline\"\n      >\n        <Menu.ItemGroup title=\"Empresas\">\n          {companies.map(company => (\n            \n            <SubMenu key={\"units\" + company.id} title={company.name}>\n              <Menu.ItemGroup title=\"Unidades\">\n                {getUnits(company.id).map(unit => (\n                  <SubMenu key={unit.id} title={unit.name}>\n                    \n                    <SubMenu \n                      key={\"users\" + unit.id} \n                      title=\"Usuários\" \n                      icon={<UserOutlined />}\n                    >\n                      {getUsers(company.id, unit.id).map(\n                        ({id, name, email}) => (\n                          <Menu.Item key={\"user\" + id}>\n                            <List.Item.Meta\n                              title={name}\n                              description={email}\n                            />\n                          </Menu.Item>\n                        )\n                      )}\n                      <NewUser \n                        visible={editUser}\n                        setVisible={setEditUser}\n                        companyId={company.id}\n                        unitId={unit.id}\n                      />\n                      <Menu.Item key=\"Add user\">\n                        <Button \n                          icon={<PlusOutlined />}\n                          type=\"dashed\"\n                          onClick={() => setEditUser(true)}\n                        >Adicionar</Button>\n                      </Menu.Item>\n                    </SubMenu>\n\n                    <SubMenu key={\"assets\" + unit.id} title=\"Ativos\">\n                      {getAssets(company.id, unit.id).map((asset) => (\n                        <Menu.Item key={\"asset\" + asset.id}>\n                          <Button \n                            onClick={() => handleButton(asset)}\n                            type=\"text\"\n                          >\n                            {asset.name}\n                          </Button>\n                        </Menu.Item>\n                      ))}\n                      <NewAsset \n                        visible={editAsset}\n                        setVisible={setEditAsset}\n                        companyId={company.id}\n                        unitId={unit.id}\n                      />\n                      <Menu.Item key=\"Add Asset\">\n                        <Button \n                          icon={<PlusOutlined />}\n                          type=\"dashed\"\n                          onClick={() => setEditAsset(true)}\n                        >Adicionar</Button>\n                      </Menu.Item>\n                    </SubMenu>\n                  </SubMenu>\n                ))}\n                <NewUnit \n                  visible={editUnit}\n                  setVisible={setEditUnit}\n                  companyId={company.id}\n                />\n                <Menu.Item key=\"Add Unit\">\n                  <Button \n                    icon={<PlusOutlined />}\n                    type=\"dashed\"\n                    onClick={() => setEditUnit(true)}\n                  >Adicionar</Button>\n                </Menu.Item>\n              </Menu.ItemGroup>\n            </SubMenu>\n          ))}\n          <Button \n            icon={<PlusOutlined />}\n            type=\"dashed\"\n            onClick={() => setEditCompany(true)}\n          >Adicionar</Button>\n        </Menu.ItemGroup>\n      </Menu>\n    </>\n  );\n}\n\nexport default MenuBar;","import { Button, Col, Image, Modal, Row, Typography } from 'antd';\nimport React from 'react';\nimport { IAsset } from '../types/global.type';\n\ninterface IModal {\n  asset: IAsset | undefined;\n  visible: boolean\n  handleOk: (asset:IAsset | undefined) => void\n  handleCancel: () => void\n  handleRemove: (id?:number) => void\n}\n\ninterface IValue {\n  title: string\n  value: any\n}\n\nconst Asset: React.FC<IModal> = (\n  {asset, visible, handleOk, handleCancel, handleRemove}\n) => {\n  const Value: React.FC<IValue> = ({title, value}) => (\n    <p><strong>{title + \": \"}</strong>{value}</p>\n  )\n\n  return (\n    <Modal\n      visible={visible}\n      title={asset?.name}\n      onOk={() => handleOk(asset)}\n      onCancel={handleCancel}\n      footer={[\n        <Button \n          key=\"back\" \n          type=\"primary\"\n          danger\n          onClick={() => handleRemove(asset?.id)}>\n          Remover\n        </Button>,\n        <Button \n          key=\"submit\" \n          type=\"primary\" \n          onClick={() => \n          handleOk(asset)}>\n          Adicionar\n        </Button>\n      ]}\n    >\n        <Image src={asset?.image}/>\n        <Value title=\"Healthscore\" value={asset?.healthscore}/>\n        <Value title=\"Status\" value={asset?.status}/>\n        <Value title=\"Modelo\" value={asset?.model}/>\n        <p><strong>Sensores:</strong></p>\n        {asset?.sensors.map(sensor => (\n          <ul>\n            <li>{sensor}</li>\n          </ul>\n        ))}\n        <p><strong>Metricas: </strong></p>\n        <ul>\n          {asset?.specifications.maxTemp &&              \n            <li>\n              <Value \n                title=\"Temperatura Máxima\"\n                value={asset?.specifications.maxTemp + \" ºC\"}>\n              </Value>\n            </li>\n          }\n          {asset?.specifications.power &&              \n            <li>\n              <Value \n                title=\"Potência\"\n                value={asset?.specifications.power + \" kWh\"}>\n              </Value>\n            </li>\n          }\n          {asset?.specifications.rpm &&              \n            <li>\n              <Value \n                title=\"RPM\"\n                value={asset?.specifications.rpm + \" RPM\"}>\n              </Value>\n            </li>\n          }\n        </ul>\n        <p><strong>Especificações: </strong></p>\n        <ul>\n          <li>\n            <Value \n              title=\"totalUptime\"\n              value={asset?.metrics.totalUptime}>\n            </Value>\n          </li>\n          <li>\n            <Value \n              title=\"totalCollectsUptime\"\n              value={asset?.metrics.totalCollectsUptime}>\n            </Value>\n          </li>\n          <li>\n            <Value \n              title=\"lastUptimeAt\"\n              value={asset?.metrics.lastUptimeAt}>\n            </Value>\n          </li>\n        </ul>\n\n    </Modal>\n  );\n}\n\nexport default Asset;","import { createElement, useState } from \"react\";\nimport { Empty, Layout } from \"antd\";\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n} from '@ant-design/icons';\nimport MenuBar from './components/MenuBar';\nimport './App.css'\n\nimport HighchartsReact from \"highcharts-react-official\";\nimport Highcharts from 'highcharts'\n\nimport Asset from \"./components/Asset\";\nimport { IAsset } from \"./types/global.type\";\n\nconst { Header, Content, Sider } = Layout;\n\nfunction App() {\n  const [visible, setVisible] = useState<boolean>(false)\n  const [assets, setAssets] = useState<IAsset[]>([])\n  const [asset, setAsset] = useState<IAsset>()\n  const [collapsed, setCollapsed] = useState<boolean>(false)\n  \n  const options = {\n    chart: {\n      type: 'column'\n    },\n    title: {\n      text: 'Healthscore dos Ativos'\n    },\n    xAxis: {\n      categories: assets.map(asset => asset.name),\n      title: {\n        text: null\n      }\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: null,\n      },\n      labels: {\n        overflow: 'justify'\n      }\n    },\n    plotOptions: {\n      column: {\n        dataLabels: {\n          enabled: true\n        }\n      }\n    },\n    series: [{\n      name: 'Healthscore',\n      data: assets.map(asset => asset.healthscore)\n    }]\n  }\n\n  function handleOk(newAsset:IAsset | undefined) {\n    if(newAsset) {\n      assets.indexOf(newAsset) === -1\n      && assets.push(newAsset)\n    }\n    setVisible(false)\n  }\n\n  function handleRemove(id?:number) {\n    setAssets(assets.filter(asset => asset.id !== id))\n    setVisible(false)\n  }\n\n  function handleCancel() {\n    setVisible(false)\n  }\n\n  function showModal() {\n    setVisible(true)\n  }\n\n  function toggle() {\n    setCollapsed(!collapsed)\n  }\n\n  return (\n    <>\n      <Asset \n        visible={visible}\n        asset={asset}\n        handleOk={handleOk}\n        handleCancel={handleCancel}\n        handleRemove={handleRemove}\n      />\n      <Layout>\n        <Header className=\"header\">\n          <div className=\"logo\">\n            <p>TRACTIAN </p>\n            <p>CHALLENGE</p>\n          </div>\n        </Header>\n        <Layout>\n          <Sider \n            collapsed={collapsed}\n            collapsible\n            className=\"site-layout-background\"\n            breakpoint=\"lg\"\n            width={250}\n            collapsedWidth={0}\n            trigger={null}\n          >\n            <MenuBar show={showModal} set={setAsset}/>\n          </Sider>\n          <Layout>\n            <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n              {createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                className: 'trigger',\n                onClick: toggle\n              })}\n            </Header>\n            <Content className=\"content\">\n              {assets.length === 0\n                ? <Empty />\n                : <HighchartsReact\n                    highcharts={Highcharts}\n                    options={options}\n                  />\n              }\n            </Content>\n          </Layout>\n        </Layout>\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}